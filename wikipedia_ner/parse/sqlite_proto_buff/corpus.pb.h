// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: corpus.proto

#ifndef PROTOBUF_corpus_2eproto__INCLUDED
#define PROTOBUF_corpus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_corpus_2eproto();
void protobuf_AssignDesc_corpus_2eproto();
void protobuf_ShutdownFile_corpus_2eproto();

class Example;
class Example_Trigger;
class Corpus;

// ===================================================================

class Example_Trigger : public ::google::protobuf::Message {
 public:
  Example_Trigger();
  virtual ~Example_Trigger();

  Example_Trigger(const Example_Trigger& from);

  inline Example_Trigger& operator=(const Example_Trigger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Example_Trigger& default_instance();

  void Swap(Example_Trigger* other);

  // implements Message ----------------------------------------------

  Example_Trigger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Example_Trigger& from);
  void MergeFrom(const Example_Trigger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string trigger = 2;
  inline bool has_trigger() const;
  inline void clear_trigger();
  static const int kTriggerFieldNumber = 2;
  inline const ::std::string& trigger() const;
  inline void set_trigger(const ::std::string& value);
  inline void set_trigger(const char* value);
  inline void set_trigger(const char* value, size_t size);
  inline ::std::string* mutable_trigger();
  inline ::std::string* release_trigger();
  inline void set_allocated_trigger(::std::string* trigger);

  // @@protoc_insertion_point(class_scope:Example.Trigger)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_trigger();
  inline void clear_has_trigger();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* trigger_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_corpus_2eproto();
  friend void protobuf_AssignDesc_corpus_2eproto();
  friend void protobuf_ShutdownFile_corpus_2eproto();

  void InitAsDefaultInstance();
  static Example_Trigger* default_instance_;
};
// -------------------------------------------------------------------

class Example : public ::google::protobuf::Message {
 public:
  Example();
  virtual ~Example();

  Example(const Example& from);

  inline Example& operator=(const Example& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Example& default_instance();

  void Swap(Example* other);

  // implements Message ----------------------------------------------

  Example* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Example& from);
  void MergeFrom(const Example& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Example_Trigger Trigger;

  // accessors -------------------------------------------------------

  // repeated string words = 1;
  inline int words_size() const;
  inline void clear_words();
  static const int kWordsFieldNumber = 1;
  inline const ::std::string& words(int index) const;
  inline ::std::string* mutable_words(int index);
  inline void set_words(int index, const ::std::string& value);
  inline void set_words(int index, const char* value);
  inline void set_words(int index, const char* value, size_t size);
  inline ::std::string* add_words();
  inline void add_words(const ::std::string& value);
  inline void add_words(const char* value);
  inline void add_words(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& words() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_words();

  // repeated .Example.Trigger trigger = 2;
  inline int trigger_size() const;
  inline void clear_trigger();
  static const int kTriggerFieldNumber = 2;
  inline const ::Example_Trigger& trigger(int index) const;
  inline ::Example_Trigger* mutable_trigger(int index);
  inline ::Example_Trigger* add_trigger();
  inline const ::google::protobuf::RepeatedPtrField< ::Example_Trigger >&
      trigger() const;
  inline ::google::protobuf::RepeatedPtrField< ::Example_Trigger >*
      mutable_trigger();

  // @@protoc_insertion_point(class_scope:Example)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> words_;
  ::google::protobuf::RepeatedPtrField< ::Example_Trigger > trigger_;
  friend void  protobuf_AddDesc_corpus_2eproto();
  friend void protobuf_AssignDesc_corpus_2eproto();
  friend void protobuf_ShutdownFile_corpus_2eproto();

  void InitAsDefaultInstance();
  static Example* default_instance_;
};
// -------------------------------------------------------------------

class Corpus : public ::google::protobuf::Message {
 public:
  Corpus();
  virtual ~Corpus();

  Corpus(const Corpus& from);

  inline Corpus& operator=(const Corpus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Corpus& default_instance();

  void Swap(Corpus* other);

  // implements Message ----------------------------------------------

  Corpus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Corpus& from);
  void MergeFrom(const Corpus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Example example = 1;
  inline int example_size() const;
  inline void clear_example();
  static const int kExampleFieldNumber = 1;
  inline const ::Example& example(int index) const;
  inline ::Example* mutable_example(int index);
  inline ::Example* add_example();
  inline const ::google::protobuf::RepeatedPtrField< ::Example >&
      example() const;
  inline ::google::protobuf::RepeatedPtrField< ::Example >*
      mutable_example();

  // @@protoc_insertion_point(class_scope:Corpus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Example > example_;
  friend void  protobuf_AddDesc_corpus_2eproto();
  friend void protobuf_AssignDesc_corpus_2eproto();
  friend void protobuf_ShutdownFile_corpus_2eproto();

  void InitAsDefaultInstance();
  static Corpus* default_instance_;
};
// ===================================================================


// ===================================================================

// Example_Trigger

// required int32 id = 1;
inline bool Example_Trigger::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Example_Trigger::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Example_Trigger::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Example_Trigger::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Example_Trigger::id() const {
  // @@protoc_insertion_point(field_get:Example.Trigger.id)
  return id_;
}
inline void Example_Trigger::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Example.Trigger.id)
}

// required string trigger = 2;
inline bool Example_Trigger::has_trigger() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Example_Trigger::set_has_trigger() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Example_Trigger::clear_has_trigger() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Example_Trigger::clear_trigger() {
  if (trigger_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trigger_->clear();
  }
  clear_has_trigger();
}
inline const ::std::string& Example_Trigger::trigger() const {
  // @@protoc_insertion_point(field_get:Example.Trigger.trigger)
  return *trigger_;
}
inline void Example_Trigger::set_trigger(const ::std::string& value) {
  set_has_trigger();
  if (trigger_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trigger_ = new ::std::string;
  }
  trigger_->assign(value);
  // @@protoc_insertion_point(field_set:Example.Trigger.trigger)
}
inline void Example_Trigger::set_trigger(const char* value) {
  set_has_trigger();
  if (trigger_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trigger_ = new ::std::string;
  }
  trigger_->assign(value);
  // @@protoc_insertion_point(field_set_char:Example.Trigger.trigger)
}
inline void Example_Trigger::set_trigger(const char* value, size_t size) {
  set_has_trigger();
  if (trigger_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trigger_ = new ::std::string;
  }
  trigger_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Example.Trigger.trigger)
}
inline ::std::string* Example_Trigger::mutable_trigger() {
  set_has_trigger();
  if (trigger_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trigger_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Example.Trigger.trigger)
  return trigger_;
}
inline ::std::string* Example_Trigger::release_trigger() {
  clear_has_trigger();
  if (trigger_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = trigger_;
    trigger_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Example_Trigger::set_allocated_trigger(::std::string* trigger) {
  if (trigger_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete trigger_;
  }
  if (trigger) {
    set_has_trigger();
    trigger_ = trigger;
  } else {
    clear_has_trigger();
    trigger_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Example.Trigger.trigger)
}

// -------------------------------------------------------------------

// Example

// repeated string words = 1;
inline int Example::words_size() const {
  return words_.size();
}
inline void Example::clear_words() {
  words_.Clear();
}
inline const ::std::string& Example::words(int index) const {
  // @@protoc_insertion_point(field_get:Example.words)
  return words_.Get(index);
}
inline ::std::string* Example::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:Example.words)
  return words_.Mutable(index);
}
inline void Example::set_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Example.words)
  words_.Mutable(index)->assign(value);
}
inline void Example::set_words(int index, const char* value) {
  words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Example.words)
}
inline void Example::set_words(int index, const char* value, size_t size) {
  words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Example.words)
}
inline ::std::string* Example::add_words() {
  return words_.Add();
}
inline void Example::add_words(const ::std::string& value) {
  words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Example.words)
}
inline void Example::add_words(const char* value) {
  words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Example.words)
}
inline void Example::add_words(const char* value, size_t size) {
  words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Example.words)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Example::words() const {
  // @@protoc_insertion_point(field_list:Example.words)
  return words_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Example::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:Example.words)
  return &words_;
}

// repeated .Example.Trigger trigger = 2;
inline int Example::trigger_size() const {
  return trigger_.size();
}
inline void Example::clear_trigger() {
  trigger_.Clear();
}
inline const ::Example_Trigger& Example::trigger(int index) const {
  // @@protoc_insertion_point(field_get:Example.trigger)
  return trigger_.Get(index);
}
inline ::Example_Trigger* Example::mutable_trigger(int index) {
  // @@protoc_insertion_point(field_mutable:Example.trigger)
  return trigger_.Mutable(index);
}
inline ::Example_Trigger* Example::add_trigger() {
  // @@protoc_insertion_point(field_add:Example.trigger)
  return trigger_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Example_Trigger >&
Example::trigger() const {
  // @@protoc_insertion_point(field_list:Example.trigger)
  return trigger_;
}
inline ::google::protobuf::RepeatedPtrField< ::Example_Trigger >*
Example::mutable_trigger() {
  // @@protoc_insertion_point(field_mutable_list:Example.trigger)
  return &trigger_;
}

// -------------------------------------------------------------------

// Corpus

// repeated .Example example = 1;
inline int Corpus::example_size() const {
  return example_.size();
}
inline void Corpus::clear_example() {
  example_.Clear();
}
inline const ::Example& Corpus::example(int index) const {
  // @@protoc_insertion_point(field_get:Corpus.example)
  return example_.Get(index);
}
inline ::Example* Corpus::mutable_example(int index) {
  // @@protoc_insertion_point(field_mutable:Corpus.example)
  return example_.Mutable(index);
}
inline ::Example* Corpus::add_example() {
  // @@protoc_insertion_point(field_add:Corpus.example)
  return example_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Example >&
Corpus::example() const {
  // @@protoc_insertion_point(field_list:Corpus.example)
  return example_;
}
inline ::google::protobuf::RepeatedPtrField< ::Example >*
Corpus::mutable_example() {
  // @@protoc_insertion_point(field_mutable_list:Corpus.example)
  return &example_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_corpus_2eproto__INCLUDED
